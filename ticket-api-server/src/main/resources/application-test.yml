spring:
  config:
    import: "optional:file:.env[.properties]"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ticket_on?serverTimezone=Asia/Seoul
    username: root
    password: wind6298


    hikari:
      maximum-pool-size: 100
      minimum-idle: 10
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
      validation-timeout: 5000
      initialization-fail-timeout: 1
      read-only: false
      leak-detection-threshold: 0

kafka:
  admin:
    properties:
      bootstrap.servers: localhost:9092
  topic-config:
    payment:
      name: payment-topic
      partitions: 3
      replicas: 1
    ticket:
      name: ticket-topic
      partitions: 3
      replicas: 1 # 복제본 : 장애 대비용
    waiting:
      name: waiting-topic
      partitions: 3
      replicas: 1


  producer:
    bootstrap-servers: localhost:9092
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    retry: 2

  consumer:
    payment-group:
      bootstrap-servers: localhost:9092
      group-id: payment-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

    waiting-group:
      bootstrap-servers: localhost:9092
      group-id: waiting-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

    listener:
    missing-topics-fatal: false # topic 이 없을 때 중단 방지
    ack-mode: manual # 오프셋 커밋 커스텀(결제 성공 시에만 오프셋 커밋)


redis:
  reservation:
    host: localhost
    port: 6379

  cache:
    host: localhost
    port: 6380


management:
  metrics:
    export:
      otlp:
        enabled: true
        endpoint: http://localhost:4318
    enable:
      all: true
      jvm: true
  endpoints:
    web:
      exposure:
        include: "*"
    prometheus:
      enabled: true

otel:
  resource:
    attributes:
      service.name: ticket-service
  exporter:
    otlp:
      url: http://localhost:4317
      protocol: grpc

logging:
  level:
    root: INFO
    io.opentelemetry: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.springframework.orm.jpa: DEBUG
    org.springframework.transaction: debug