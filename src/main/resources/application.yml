spring:
  profiles:
    active: local
  config:
    import: "optional:file:.env[.properties]"

  jpa:
    hibernate:
      ddl-auto: update
      database-platform: org.hibernate.dialect.MySQLDialect
      defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: false
        format_sql: false
logging:
  level:
    root: INFO
    io.opentelemetry: DEBUG


management:
  metrics:
    export:
      otlp:
        enabled: true
        endpoint: http://otel-collector:4318
    enable:
      all: true
      jvm: true
  endpoints:
    web:
      exposure:
        include: "*"
    prometheus:
      enabled: true

otel:
  resource:
    attributes:
      service.name: ticket-service
  exporter:
    otlp:
      url: http://otel-collector:4317
      protocol: grpc

snail-catch:
  enabled: true
  repository-pointcut: execution(* com.ticketon.ticketon.domain..repository..*(..))
  api-key: 13a4d744b37046e2b62f90077c0936f8

server:
  tomcat:
    threads:
      max: 200
      min-spare: 10
      max-queue-capacity: 2147483647
    max-connections: 8192
    accept-count: 100
    connection-timeout: 60000
    keep-alive-timeout: 30000
    max-http-header-size: 8192
    max-keep-alive-requests: 100


redis:
  queue:
    host: localhost
    port: 6379

  cache:
    host: localhost
    port: 6380

kafka:
  admin:
    properties:
      bootstrap.servers: localhost:9092
  topic-config:
    payment:
      name: payment-topic
      partitions: 3
      replicas: 1
    ticket:
      name: ticket-topic
      partitions: 3
      replicas: 1 # 복제본 : 장애 대비용

  producer: # 예약 정보
    bootstrap-servers: localhost:9092
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer # 예약 정보를 담은 JSON 형으로 직렬화
    retry: 2
  consumer: # 결제 서버
    bootstrap-servers: localhost:9092
    group-id: ticket-on-service
    auto-offset-reset: latest # offset 이 없을때 가장 최근에 메시지 읽기
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer # 역직렬화

  listener:
    missing-topics-fatal: false # topic 이 없을 때 중단 방지
    ack-mode: manual # 오프셋 커밋 커스텀(결제 성공 시에만 오프셋 커밋)

toss:
  secret-key: ${TOSS_SECRET_KEY}
  base-url: https://api.tosspayments.com/v1/payments
  confirm-end-point: /confirm
  cancel-end-point: /cancel
