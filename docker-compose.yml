version: '3.7'

services:
  redis:
    image: redis:7.0.11
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - monitoring

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - monitoring

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - monitoring


  queue-server:
    build: .
    container_name: queue-server-1
    environment:
      SPRING_PROFILES_ACTIVE: docker
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    restart: always
    networks:
      - monitoring
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh

  mysql:
    image: mysql:8.0
    container_name: ticket-mysql
    restart: always
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($|/)"'

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - monitoring
    volumes:
      - grafana-storage:/var/lib/grafana


  tempo:
    image: grafana/tempo:2.4.1
    container_name: tempo
    ports:
      - "3200:3200"
    volumes:
      - ./monitoring-config/tempo-config.yml:/etc/tempo-config.yml
    command: --config.file=/etc/tempo-config.yml
    networks:
      - monitoring

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.93.0
    container_name: otel-collector
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8889:8889"
    volumes:
      - ./monitoring-config/otel-collector-config.yml:/etc/otel/otel-collector-config.yml
    command: --config=/etc/otel/otel-collector-config.yml
    networks:
      - monitoring
    depends_on:
      - tempo

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring-config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=4d'
      - '--log.level=warn'
    networks:
      - monitoring

#  loki:
#    image: grafana/loki:2.9.4
#    container_name: loki
#    ports:
#      - "3100:3100"
#    volumes:
#      - ./monitoring-config/loki-config.yml:/etc/loki/loki-config.yml
#    command: -config.file=/etc/loki/loki-config.yml
#    networks:
#      - monitoring


networks:
  monitoring:
    driver: bridge

volumes:
  mysql-data:
  grafana-storage:
  influxdb-storage:

